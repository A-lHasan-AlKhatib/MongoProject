package View;

import Controller.ExamController;
import Controller.XtraController;
import Model.Exam;
import Model.Operators;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.Objects;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author Handy
 */
public class TeacherFrame extends javax.swing.JFrame {
    private int id = 0;

    /**
     * Creates new form TeacherFrame
     */

    private TeacherFrame() {
        new TeacherFrame(id);
    }

    TeacherFrame(int id) {
        try {
            Exam.setCount(ExamController.getLastExamId());
            MainFrame.writeLog("Teacher frame has been opend");
            initComponents();
            this.setLocationRelativeTo(null);
            this.id = id;
            String[] courses = XtraController.getAddText(id);
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(courses);
            coursesList.setModel(model);

            courses = XtraController.getExamText(id);
            model = new DefaultComboBoxModel<>(courses);
            examsList.setModel(model);
            examsListDelete.setModel(model);
            if (courses.length > 0) {
                int eid = Integer.parseInt(courses[0].substring(0, courses[0].indexOf(":")).trim());
                String examRoom = ExamController.searchExam(Operators.eq, "id", eid).get(0).getRoom();
                updRoom.setText(examRoom);
            }
            ActionEvent event = new ActionEvent(viewTable, 0, "");
            buttonViewActionPerformed(event);
            MainFrame.writeLog("All courses and exams for teacher id = " + id + " has been retrived.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Something Went Wrong!!\n" + ex.getMessage(), "ERROR!!", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JTabbedPane jTabbedPane1 = new JTabbedPane();
        JPanel jPanel1 = new JPanel();
        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel3 = new JLabel();
        JLabel jLabel4 = new JLabel();
        JButton buttonAdd = new JButton();
        coursesList = new javax.swing.JComboBox<>();
        addRoom = new javax.swing.JTextField();
        Date date = new Date();
        SpinnerDateModel sm =
                new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        addTime = new javax.swing.JSpinner(sm);
        String pattern = "yyyy-MM-dd";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        addDate = new datechooser.beans.DateChooserCombo();
        JLabel jLabel5 = new JLabel();
        addId = new javax.swing.JTextField();
        JPanel jPanel2 = new JPanel();
        JLabel jLabel52 = new JLabel();
        JLabel jLabel6 = new JLabel();
        updRoom = new javax.swing.JTextField();
        JLabel jLabel7 = new JLabel();
        JLabel jLabel8 = new JLabel();
        examsList = new javax.swing.JComboBox<>();
        JButton buttonUpd = new JButton();
        updTime = new javax.swing.JSpinner(sm);
        pattern = "yyyy-MM-dd";
        simpleDateFormat = new SimpleDateFormat(pattern);
        updDate = new datechooser.beans.DateChooserCombo();
        JPanel jPanel3 = new JPanel();
        JLabel jLabel9 = new JLabel();
        examsListDelete = new javax.swing.JComboBox<>();
        JButton buttonDelete = new JButton();
        JPanel jPanel4 = new JPanel();
        JButton buttonView = new JButton();
        JScrollPane jScrollPane1 = new JScrollPane();
        viewTable = new javax.swing.JTable();
        JButton buttonBack = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Course :");

        jLabel2.setText("Room :");

        jLabel3.setText("Date :");

        jLabel4.setText("Time :");

        buttonAdd.setText("Add");
        addId.setEnabled(false);
        buttonAdd.addActionListener(this::buttonAddActionPerformed);

        JSpinner.DateEditor de = new JSpinner.DateEditor(addTime, "HH:mm");
        addTime.setEditor(de);

        addDate.setDateFormat(simpleDateFormat);

        jLabel5.setText("Id :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(coursesList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jLabel3)
                                                                        .addComponent(jLabel4)
                                                                        .addComponent(jLabel5))
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                        .addComponent(addRoom, javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(addTime, javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(addDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)))
                                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                                .addGap(17, 17, 17)
                                                                                .addComponent(addId, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addComponent(buttonAdd)))
                                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(coursesList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(addId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(addTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonAdd)
                                .addGap(33, 33, 33))
        );

        Dimension size = addDate.getCalendarPreferredSize();
        size.width += 90;
        addDate.setCalendarPreferredSize(size);

        jTabbedPane1.addTab("Add exam", jPanel1);

        jLabel52.setText("Time :");

        jLabel6.setText("Date :");

        jLabel7.setText("Room :");

        jLabel8.setText("Exam :");

        examsList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        examsList.addActionListener(actionEvent -> {
            String s = Arrays.toString(examsList.getSelectedObjects());
            s = s.substring(1, s.indexOf(":")).trim();
            System.out.println(s);
            int eid = Integer.parseInt(s);
            String examRoom = ExamController.searchExam(Operators.eq, "id", eid).get(0).getRoom();
            updRoom.setText(examRoom);
        });

        buttonUpd.setText("Update");
        buttonUpd.addActionListener(this::buttonUpdActionPerformed);

        updTime.setModel(addTime.getModel());

        updDate.setDateFormat(simpleDateFormat);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel8)
                                                        .addComponent(jLabel7)
                                                        .addComponent(jLabel6)
                                                        .addComponent(jLabel52))
                                                .addGap(26, 26, 26)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(updRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                                        .addComponent(examsList, 0, 286, Short.MAX_VALUE)
                                                        .addComponent(updTime, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                                        .addComponent(updDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addComponent(buttonUpd)))
                                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(examsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addComponent(updDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel52)
                                        .addComponent(updTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addComponent(buttonUpd)
                                .addGap(48, 48, 48))
        );

        de = new JSpinner.DateEditor(updTime, "HH:mm");
        updTime.setEditor(de);
        size = updDate.getCalendarPreferredSize();
        size.width += 90;
        updDate.setCalendarPreferredSize(size);

        jTabbedPane1.addTab("Update exam", jPanel2);

        jLabel9.setText("Exam :");

        examsListDelete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(this::buttonDeleteActionPerformed);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(buttonDelete)
                                .addContainerGap(314, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(examsListDelete, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(19, 19, 19)))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(179, Short.MAX_VALUE)
                                .addComponent(buttonDelete)
                                .addContainerGap())
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel9)
                                                .addComponent(examsListDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap(183, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Delete exam", jPanel3);

        buttonView.setText("View");
        buttonView.addActionListener(this::buttonViewActionPerformed);

        viewTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(viewTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(buttonView)
                                .addContainerGap(326, Short.MAX_VALUE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonView)
                                .addContainerGap())
        );

        jTabbedPane1.addTab("View exam", jPanel4);

        buttonBack.setText("Back");
        buttonBack.addActionListener(evt -> buttonBackActionPerformed());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTabbedPane1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(buttonBack)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(buttonBack)
                                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed() {//GEN-FIRST:event_buttonBackActionPerformed
        TeacherLogin t = new TeacherLogin();
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        try {
            if (addRoom.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Fill all the fields", "Error!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!addRoom.getText().matches("[A-Z a-z][0-9]{3}")) {
                JOptionPane.showMessageDialog(null, "Enter right room nubmer!!", "Error!", JOptionPane.WARNING_MESSAGE);
                return;
            }

            String exam = (String) coursesList.getSelectedItem();
            int offerId = Integer.parseInt(Objects.requireNonNull(exam).substring(0, exam.indexOf(':')).trim());
            String room = addRoom.getText();
            String date = addDate.getText();
            String time = addTime.getValue().toString();
            int index = time.indexOf(':');
            time = time.substring(index - 2, index + 3);
            ExamController.addExam(new Exam(offerId, room, date, time));
            addId.setText("");
            addRoom.setText("");
            Object[] courses = XtraController.getExamText(id);
            DefaultComboBoxModel model = new DefaultComboBoxModel(courses);
            examsList.setModel(model);
            examsListDelete.setModel(model);
            ActionEvent event = new ActionEvent(viewTable, 0, "");
            buttonViewActionPerformed(event);
            JOptionPane.showMessageDialog(null, "Added successfully", "Done", JOptionPane.INFORMATION_MESSAGE);
            MainFrame.writeLog("Exam has been added with id = " + offerId + " offer_id = " + offerId + " room = " + room + " date = " + date + " time = " + time);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Enter the right datatype!!", "Error!!", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something went Wrong!!", "Error!!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        try {
            String exam = (String) examsList.getSelectedItem();
            int examId = Integer.parseInt(Objects.requireNonNull(exam).substring(0, exam.indexOf(':')).trim());
            int answer = JOptionPane.showConfirmDialog(null, "Are you sure?", "Done", JOptionPane.YES_NO_OPTION);
            if (answer == JOptionPane.YES_OPTION) {
                ExamController.delete(Operators.eq, "id", examId);
                Object[] courses = XtraController.getExamText(id);
                DefaultComboBoxModel model = new DefaultComboBoxModel(courses);
                examsList.setModel(model);
                examsListDelete.setModel(model);
                JOptionPane.showMessageDialog(null, "Deleted succesfully", "Done", JOptionPane.INFORMATION_MESSAGE);
                ActionEvent event = new ActionEvent(viewTable, 0, "");
                buttonViewActionPerformed(event);
                MainFrame.writeLog("Exam with id = " + examId + "has been deleted.");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something Went Wrong!!", "ERROR!!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdActionPerformed

        try {

            if (updRoom.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Fill all the fields", "Error!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!updRoom.getText().matches("[A-Z a-z][0-9]{3}")) {
                JOptionPane.showMessageDialog(null, "Enter right room nubmer!!", "Error!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            String exam = Objects.requireNonNull(examsList.getSelectedItem()).toString();
            int examId = Integer.parseInt(exam.substring(0, exam.indexOf(':') - 1).trim());
            String room = updRoom.getText();
            String date = updDate.getText();
            String time = updTime.getValue().toString();
            int index = time.indexOf(':');
            time = time.substring(index - 2, index + 3);
            Exam e = ExamController.searchExam(Operators.eq, "id", examId).get(0);
            e.setDate(date);
            e.setRoom(room);
            e.setTime(time);
            ExamController.replaceStudent(Operators.eq, "id", examId, e);
            JOptionPane.showMessageDialog(null, "Updated succesfully", "Done", JOptionPane.INFORMATION_MESSAGE);
            ActionEvent event = new ActionEvent(viewTable, 0, "");
            buttonViewActionPerformed(event);
            MainFrame.writeLog("Exam with id = " + examId + " update to " + " room = " + room + " date = " + date + " time = " + time);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something Went Wrong!!", "ERROR!!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonUpdActionPerformed

    private void buttonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewActionPerformed
        try {
            Object[][] data = XtraController.displayExamsTeacherId(id);
            Object[] cols = new Object[5];
            cols[0] = "Teatcher name";
            cols[1] = "Course name";
            cols[2] = "Room";
            cols[3] = "Date";
            cols[4] = "Time";
            DefaultTableModel model = new DefaultTableModel(data, cols);
            viewTable.setModel(model);
            MainFrame.writeLog("All exams for teacher with id = " + id + "has been retrived");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Something Went Wrong!!\n" + e.getMessage(), "ERROR!!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_buttonViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        /* <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) "> */
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Something Went Wrong!!\n" + ex.getMessage(), "ERROR!!", JOptionPane.WARNING_MESSAGE);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new TeacherFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo addDate;
    private javax.swing.JTextField addId;
    private javax.swing.JTextField addRoom;
    private javax.swing.JSpinner addTime;
    private javax.swing.JComboBox<String> coursesList;
    private javax.swing.JComboBox<String> examsList;
    private javax.swing.JComboBox<String> examsListDelete;
    private datechooser.beans.DateChooserCombo updDate;
    private javax.swing.JTextField updRoom;
    private javax.swing.JSpinner updTime;
    private javax.swing.JTable viewTable;
    // End of variables declaration//GEN-END:variables
}